### 解题思路

从后往前找到第一个（最大索引）比自己后一位小的元素，确定i的位置
从后往前找第一个比nums[i]大的元素下标为j，交换两个位置的元素，
翻转i+1到n-1的元素。
得到下一个序列

### 代码

* java

```java
class Solution {
    public void nextPermutation(int[] nums) {
        int i = nums.length - 2;
        while(i >= 0 && nums[i] >= nums[i+1]){
            i--;
        }
        if(i >= 0){
            int j = nums.length - 1;
            while(j>= 0 && nums[j] <= nums[i]){
                j--;
            }
            swap(nums,i,j);
        }
        reverse(nums,i+1);
    }

    public void swap(int[] nums,int i,int j){
        int temp = nums[j];
        nums[j] = nums[i];
        nums[i] = temp;
    }

    //翻转从start开始的数组序列，原来肯定是降序（从大到小），转换为升序（从小到大）
    public void reverse(int[] nums,int start){
        int left = start;
        int right = nums.length-1;
        while(left < right){
            swap(nums,left,right);
            left++;
            right--;
        }
    }
}
```

